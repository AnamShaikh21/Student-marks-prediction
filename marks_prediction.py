# -*- coding: utf-8 -*-
"""Marks Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iZl8id2C6dHsTq5D4ODgCyu7Pn-gdw9r
"""

# libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

path = r"/content/student_info.csv"
df = pd.read_csv(path)  #read data
df.head()

df.shape

df.info()

df.describe()

plt.scatter(x= df.study_hours, y =df.student_marks)
plt.xlabel("Students study hours")
plt.ylabel("Students marks")
plt.title("Scatter Plot of Students Study Hours VS Students Marks")
plt.show()

#data cleaning
df.isnull().sum()

df.mean()

df2 =df.fillna(df.mean())

df2.isnull().sum()

df2.head()

#split data set
X = df2.drop("student_marks", axis = "columns")
y = df2.drop("study_hours", axis = "columns")
print("shape of X = ", X.shape)
print("shape of y = ", y.shape)

#train Data
from sklearn.model_selection import train_test_split
X_train, X_test,y_train,y_test = train_test_split(X,y, test_size = 0.2, random_state=51)
print("shape of X_train = ", X_train.shape)
print("shape of y_train = ", y_train.shape)
print("shape of X_test = ", X_test.shape)
print("shape of y_test = ", y_test.shape)

#select model and train 
from sklearn.linear_model import LinearRegression
lr = LinearRegression()

lr.fit(X_train,y_train)

lr.coef_  # m value of y=mx+c

lr.intercept_  #c of formula

lr.predict([[4]])[0][0].round(2)

y_pred = lr.predict(X_test)
y_pred

pd.DataFrame(np.c_[X_test, y_test, y_pred], columns = [ "study_hours", "students_marks_original","students_marks_predicted"])

#fine-tune model

lr.score(X_test, y_test)

plt.scatter(X_train, y_train)

plt.scatter(X_test, y_test)
plt.plot(X_train,lr.predict(X_train),color = 'r')

import joblib
joblib.dump(lr, "Students_marks_predictor")

model = joblib.load("Students_marks_predictor")

model.predict([[5]])

